package fr.tp.inf112.projects.robotsim.model;

import java.awt.Component;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.InetSocketAddress;
import java.net.Socket;
import java.net.SocketAddress;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileView;

import fr.tp.inf112.projects.canvas.view.FileCanvasChooser;

public class RemoteFileCanvasChooser extends FileCanvasChooser {
	
	private FileNameExtensionFilter fileNameFilter;
	private Component viewer;
	
	public RemoteFileCanvasChooser() {
		this(null, null, null);
	}

	public RemoteFileCanvasChooser(String fileExtension, String documentTypeLabel) {
		this(null, fileExtension, documentTypeLabel);
	}

	public RemoteFileCanvasChooser(Component viewer, String fileExtension, String documentTypeLabel) {
		super(viewer, fileExtension, documentTypeLabel);
		fileNameFilter = new FileNameExtensionFilter(documentTypeLabel + " files " + "(*." + fileExtension + ")", fileExtension);
		this.viewer = viewer;
	}
	
	@Override
	protected String browseCanvases(final boolean open) 
	throws IOException {
		final JFileChooser chooser = new JFileChooser("./"); 
	    chooser.setFileFilter(fileNameFilter);
	    
	    final int returnVal;
	    
	    if (open) {
			int port = 80;
			InetAddress netAddr = InetAddress.getByName("localhost");
			SocketAddress sockAddr = new InetSocketAddress(netAddr, port);
			
			try (Socket socket = new Socket()) {
				socket.connect(sockAddr, 1000); // Timeout in ms
				
				OutputStream outStr = socket.getOutputStream();
				ObjectOutputStream oos = new ObjectOutputStream(outStr);
				InputStream inpStr = socket.getInputStream();
	            ObjectInputStream ois = new ObjectInputStream(inpStr);
				
				oos.writeObject(fileNameFilter);
                oos.flush();
                
                File[] files = (File[]) ois.readObject();
                JOptionPane.showInputDialog(files);
                
				oos.close();
				ois.close();
			} catch (ClassNotFoundException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
			returnVal = JFileChooser.APPROVE_OPTION;
	    }
	    else {
	    	returnVal = chooser.showSaveDialog(viewer);
	    }
	    
	    if (returnVal == JFileChooser.APPROVE_OPTION) {
	    	final File file = chooser.getSelectedFile();
	    	
	    	return file.getPath();
	    }
	    
	    return null;
	}
	
}
